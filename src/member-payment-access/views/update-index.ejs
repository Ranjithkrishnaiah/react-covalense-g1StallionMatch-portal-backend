<htm>

    <head>
      <title>Checkout</title>
      <script src="https://js.stripe.com/v3/"></script>
      <!-- <script src="script.js"></script> -->
      <meta name="viewport" content="width=device-width, initial-scale=0.86, maximum-scale=5.0, minimum-scale=0.86">
      <meta name="viewport" content="initial-scale=1, maximum-scale=1">

      <style>
        .buttonCustom {
          margin-top:10px;
          border:none;
          border-radius: 5px;
          padding: 10px 10px;
          cursor: pointer
        }
      </style>

    </head>
  
    <body>
      <form id="payment-form">
        <div id="payment-element">
          <!-- Elements will create form elements here -->
        </div>
        
        <button id="submit" class="buttonCustom">Submit</button>
        <div>
         
        </div>
      
        <div id="error-message">
          <!-- Display error message to your customers here -->
        </div>
      </form>
      <% var secret = secret_key; %> 
      <script>
         var getSecret = "<%= secret  %>";
         var getPaymentMethod = "<%= paymentMethod  %>";
   
       //const stripe = Stripe('pk_test_51JGz9QAiVxbDUMH79WwcuEAOaEZbPKE0BzSUVUayRqfEZdcA5rotJcKFUzGJRIVtvCL8EBHzfpKc8VJ7rNen7Gyy00sInO8mie');
       const stripe = Stripe('pk_test_51KbvAgKW4289ZuyIRGWnE4GoUtjqsILJDTmXcxalfJpZHAm4O64rnErPJVd7WpQGeilM5LFwqik8NZmkBLzM2mL3004qmwJTpr'); 

  
        const options = {
          clientSecret:getSecret,
        // clientSecret: "seti_1JuV8aLl1bGK8nO3yT9FVtCk_secret_KZeRmXjX9E3CLpzjK2uMl8XHcCjS9dM",
          // Fully customizable with appearance API.
        //   appearance: {/.../ },
        };
  
        // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 2
        const elements = stripe.elements(options);
  
        // Create and mount the Payment Element
        const paymentElement = elements.create('payment');
        paymentElement.mount('#payment-element');
  
        const form = document.getElementById('payment-form');
  
        form.addEventListener('submit', async (event) => {
          event.preventDefault();
          const { error } = await stripe .confirmCardSetup(getSecret, { payment_method: getPaymentMethod,
            confirmParams: {
              return_url: 'http://localhost:8080/user/profile',
            }
           })
         /* const { error } = await stripe.confirmSetup({
            elements,
            confirmParams: {
              return_url: 'http://localhost:8080/user/profile',
            }
          }); */
  
          if (error) {
            // This point will only be reached if there is an immediate error when
            // confirming the payment. Show error to your customer (e.g., payment
            // details incomplete)
            const messageContainer = document.querySelector('#error-message');
            messageContainer.textContent = error.message;
          } else {
            // Your customer will be redirected to your `return_url`. For some payment
            // methods like iDEAL, your customer will be redirected to an intermediate
            // site first to authorize the payment, then redirected to the `return_url`.
          }
        });
      </script>
    </body>
  </htm>